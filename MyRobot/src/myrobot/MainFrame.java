/*
 * Konum bilgileri integer alınacak // Yapıldı
 * Robot nesneleri oluşturulacak // Yapıldı
 * Izgarada gösterilecek // Yapıldı
 * Robot yerleştirme engel kontrolü
 * Hareket kısmı yazılacak
 * Zaman hesaplaması yapılacak
 * Hibrit için geçiş ve sabitlenme süreleri eklenecek
 */
package myrobot;

import javax.swing.*;
import java.awt.*;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setSize(1300,800);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        robottipisecimpaneli = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        robotalttipisecimpaneli = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        robotParametreGirisPaneli = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        robotHareketSecimPaneli = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        engelSecimPaneli = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("İleri -->");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("<-- Geri");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 480, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel9);

        javax.swing.GroupLayout robottipisecimpaneliLayout = new javax.swing.GroupLayout(robottipisecimpaneli);
        robottipisecimpaneli.setLayout(robottipisecimpaneliLayout);
        robottipisecimpaneliLayout.setHorizontalGroup(
            robottipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robottipisecimpaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(robottipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        robottipisecimpaneliLayout.setVerticalGroup(
            robottipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robottipisecimpaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton4.setText("İleri -->");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("<-- Geri");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel2);

        javax.swing.GroupLayout robotalttipisecimpaneliLayout = new javax.swing.GroupLayout(robotalttipisecimpaneli);
        robotalttipisecimpaneli.setLayout(robotalttipisecimpaneliLayout);
        robotalttipisecimpaneliLayout.setHorizontalGroup(
            robotalttipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotalttipisecimpaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(robotalttipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        robotalttipisecimpaneliLayout.setVerticalGroup(
            robotalttipisecimpaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robotalttipisecimpaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton6.setText("Onayla");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("<-- Geri");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("     ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel8);

        javax.swing.GroupLayout robotParametreGirisPaneliLayout = new javax.swing.GroupLayout(robotParametreGirisPaneli);
        robotParametreGirisPaneli.setLayout(robotParametreGirisPaneliLayout);
        robotParametreGirisPaneliLayout.setHorizontalGroup(
            robotParametreGirisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotParametreGirisPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(robotParametreGirisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        robotParametreGirisPaneliLayout.setVerticalGroup(
            robotParametreGirisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotParametreGirisPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        robotHareketSecimPaneli.setMaximumSize(new java.awt.Dimension(1033, 675));

        jScrollPane7.setMaximumSize(new java.awt.Dimension(1021, 662));
        jScrollPane7.setPreferredSize(new java.awt.Dimension(1021, 662));

        jLabel6.setText("Hareket ettirmek istediğiniz robotu seçiniz:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel7.setText("x:");

        jLabel8.setText("y:");

        jTextField5.setEditable(false);

        jTextField6.setEditable(false);

        jLabel4.setText("Hareket Süresi:");

        jLabel5.setText("Taşıma Süresi:");

        jTextField1.setEditable(false);

        jTextField3.setEditable(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox2, 0, 289, Short.MAX_VALUE)
                    .addComponent(jTextField5)
                    .addComponent(jTextField6))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3)))
                .addContainerGap(174, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Hareket yönlerini belirtiniz:");

        jButton8.setText("Geri");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Sol");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Sağ");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("İleri");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addContainerGap())
        );

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jButton12.setText("Hareket Ettir");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton15.setText("İleri -->");

        jButton16.setText("<-- Geri");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane7.setViewportView(jPanel16);

        javax.swing.GroupLayout robotHareketSecimPaneliLayout = new javax.swing.GroupLayout(robotHareketSecimPaneli);
        robotHareketSecimPaneli.setLayout(robotHareketSecimPaneliLayout);
        robotHareketSecimPaneliLayout.setHorizontalGroup(
            robotHareketSecimPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robotHareketSecimPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        robotHareketSecimPaneliLayout.setVerticalGroup(
            robotHareketSecimPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robotHareketSecimPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE))
        );

        jLabel10.setText("Engelleri Belirleyiniz:");

        jLabel11.setText("x:");

        jLabel12.setText("y:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        jButton17.setText("Engel Ekle");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton17)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton13.setText("İleri -->");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("<-- Geri");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 470, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton14))
                .addContainerGap())
        );

        javax.swing.GroupLayout engelSecimPaneliLayout = new javax.swing.GroupLayout(engelSecimPaneli);
        engelSecimPaneli.setLayout(engelSecimPaneliLayout);
        engelSecimPaneliLayout.setHorizontalGroup(
            engelSecimPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(engelSecimPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(engelSecimPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        engelSecimPaneliLayout.setVerticalGroup(
            engelSecimPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(engelSecimPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Robot");

        jLabel2.setText("Oluşturmak istediğiniz robot sayısını giriniz:");

        jButton2.setText("İleri -->");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 332, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 330, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String robotsayisitext = jTextField2.getText();
        int robotsayisi;
        
        if(pozitifTamSayimi(robotsayisitext)){
            robotsayisi = Integer.parseInt(robotsayisitext);
            this.remove(jPanel1);
            
            this.setLayout(new GridLayout());
            this.add(robottipisecimpaneli);
            jPanel9.setLayout(new GridLayout(robotsayisi,2));
            String[] robottipleri = {"Gezgin","Manipulator","Hibrit"};
            tipler = new JComboBox[robotsayisi];
            
            for(int i=0;i<robotsayisi;i++){
                jPanel9.add(new JLabel("Robot "+(i+1)));
                tipler[i] = new JComboBox(robottipleri);
                jPanel9.add(tipler[i]);
            }
            
            jPanel9.revalidate();
            robottipisecimpaneli.revalidate();
            this.revalidate();
            this.setVisible(false);
            this.setVisible(true);
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "Lütfen pozitif bir sayı giriniz!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jPanel9.removeAll();
        this.remove(robottipisecimpaneli);
        this.add(jPanel1);
        this.revalidate();
        jPanel1.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        /// revalidate methodu ikinci kez çalışmıyor.
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.remove(robottipisecimpaneli);
        this.add(robotalttipisecimpaneli);
        jPanel2.setLayout(new GridLayout(tipler.length,3));
        String[] robotalttiplerigezgin = {"Tekerlekli","Paletli","Spider"};
        String[] robotalttiplerimanipulator = {"Seri","Paralel"};
        String[] robotalttiplerihibrit = {"Tekerlekli-Seri","Tekerlekli-Paralel","Paletli-Seri","Paletli-Paralel","Spider-Seri","Spider-Paralel"};
        alttipler1 = new JComboBox[tipler.length];
        
        for(int i=0;i<tipler.length;i++){
            jPanel2.add(new JLabel("Robot "+(i+1)));
            String selected = tipler[i].getSelectedItem().toString();
            jPanel2.add(new JLabel(selected));
            if(selected.equals("Gezgin")){
                alttipler1[i] = new JComboBox(robotalttiplerigezgin);
            }else if(selected.equals("Manipulator")){
                alttipler1[i] = new JComboBox(robotalttiplerimanipulator);
            }else{
                alttipler1[i] = new JComboBox(robotalttiplerihibrit);
            }
            jPanel2.add(alttipler1[i]);
        }
        
        jPanel2.revalidate();
        robotalttipisecimpaneli.revalidate();
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jPanel2.removeAll();
        this.remove(robotalttipisecimpaneli);
        this.add(robottipisecimpaneli);
        robottipisecimpaneli.revalidate();
        jPanel9.revalidate();
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.remove(robotalttipisecimpaneli);
        alttipler = new String[alttipler1.length];
        for(int i=0;i<alttipler1.length;i++){
            alttipler[i] = alttipler1[i].getSelectedItem().toString();
        }
        psp = new ParametreSecimPaneli(alttipler);
        this.add(robotParametreGirisPaneli);
        jPanel8.setLayout(new GridLayout());
        jPanel8.add(psp);
        jPanel8.revalidate();
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jPanel8.removeAll();
        this.remove(robotParametreGirisPaneli);
        this.add(robotalttipisecimpaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Seri ve paralel robotların kontrolleri buraya yapılacak. // Yapıldı
        //Parametrelerin default değerleri atanacak. // Yapıldı
        //Gezgin robotların hızları kontrol edilecek. // Yapıldı
        
        tp = psp.getTanimlanmisParametreler();
        int motorsayisi,tekerleksayisi,paletsayisi,bacaksayisi;
        int x,y;
        double yukmiktari,gezinmehizi,kapasite,koluzunlugu,tasimahizi;
        String param;
        boolean sayilaruygunmu = true;
        robotobjects = new Robot[tp[0].length];
        
        for(int j=0;j<tp[0].length;j++){
            if(tp[2][j].isEnabled()){
                param = tp[2][j].getText();
                if(pozitifTamSayimi(param)){
                    motorsayisi = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Motor sayısı pozitif tam sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[3][j].isEnabled()){
                param = tp[3][j].getText();
                if(pozitifTamSayimi(param)){
                    x = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "x bir pozitif tam sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[4][j].isEnabled()){
                param = tp[4][j].getText();
                if(pozitifTamSayimi(param)){
                    y = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "y bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[5][j].isEnabled()){
                param = tp[5][j].getText();
                if(doublemi(param)){
                    yukmiktari = Double.parseDouble(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Yük miktarı bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[6][j].isEnabled()){
                param = tp[6][j].getText();
                if(doublemi(param)){
                    gezinmehizi = Double.parseDouble(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Gezinme hızı bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[7][j].isEnabled()){
                param = tp[7][j].getText();
                if(pozitifTamSayimi(param)){
                    tekerleksayisi = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Tekerlek sayısı pozitif tam sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[8][j].isEnabled()){
                param = tp[8][j].getText();

                if(pozitifTamSayimi(param)){
                    paletsayisi = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Palet sayısı pozitif tam sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[9][j].isEnabled()){
                param = tp[9][j].getText();
                if(pozitifTamSayimi(param)){
                    bacaksayisi = Integer.parseInt(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Bacak sayısı pozitif tam sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[10][j].isEnabled()){
                param = tp[10][j].getText();
                if(doublemi(param)){
                    kapasite = Double.parseDouble(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Kapasite bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[11][j].isEnabled()){
                param = tp[11][j].getText();
                if(doublemi(param)){
                    koluzunlugu = Double.parseDouble(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Kol uzunluğu bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
            
            if(tp[12][j].isEnabled()){
                param = tp[12][j].getText();
                if(doublemi(param)){
                    tasimahizi = Double.parseDouble(param);
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Taşıma hızı bir ondalık sayı olmalıdır!");
                    sayilaruygunmu = false;
                    break;
                }
            }
        }
        
        if(sayilaruygunmu){
            int[] tekerleklipoz = pozisyonbul("Tekerlekli",alttipler);
            int[] paletlipoz = pozisyonbul("Paletli",alttipler);
            int[] spiderpoz = pozisyonbul("Spider",alttipler);
            int[] seripoz = pozisyonbul("Seri",alttipler);
            int[] paralelpoz = pozisyonbul("Paralel",alttipler);
            int[] tekerlekliseripoz = pozisyonbul("Tekerlekli-Seri",alttipler);
            int[] tekerlekliparalelpoz = pozisyonbul("Tekerlekli-Paralel",alttipler);
            int[] paletliseripoz = pozisyonbul("Paletli-Seri",alttipler);
            int[] paletliparalelpoz = pozisyonbul("Paletli-Paralel",alttipler);
            int[] spiderseripoz = pozisyonbul("Spider-Seri",alttipler);
            int[] spiderparalelpoz = pozisyonbul("Spider-Paralel",alttipler);

            int[] tumtekerleklipoz = new int[tekerleklipoz.length+tekerlekliseripoz.length+tekerlekliparalelpoz.length];
            System.arraycopy(tekerleklipoz,0,tumtekerleklipoz,0,tekerleklipoz.length);
            System.arraycopy(tekerlekliseripoz,0,tumtekerleklipoz,tekerleklipoz.length,tekerlekliseripoz.length);
            System.arraycopy(tekerlekliparalelpoz,0,tumtekerleklipoz,tekerleklipoz.length+tekerlekliseripoz.length,tekerlekliparalelpoz.length);
            
            int[] tumpaletlipoz = new int[paletlipoz.length+paletliseripoz.length+paletliparalelpoz.length];
            System.arraycopy(paletlipoz,0,tumpaletlipoz,0,paletlipoz.length);
            System.arraycopy(paletliseripoz,0,tumpaletlipoz,paletlipoz.length,paletliseripoz.length);
            System.arraycopy(paletliparalelpoz,0,tumpaletlipoz,paletlipoz.length+paletliseripoz.length,paletliparalelpoz.length);
            
            int[] tumspiderpoz = new int[spiderpoz.length+spiderseripoz.length+spiderparalelpoz.length];
            System.arraycopy(spiderpoz,0,tumspiderpoz,0,spiderpoz.length);
            System.arraycopy(spiderseripoz,0,tumspiderpoz,spiderpoz.length,spiderseripoz.length);
            System.arraycopy(spiderparalelpoz,0,tumspiderpoz,spiderpoz.length+spiderseripoz.length,spiderparalelpoz.length);
            
            int[] tumseripoz = new int[seripoz.length+tekerlekliseripoz.length+paletliseripoz.length+spiderseripoz.length];
            System.arraycopy(seripoz,0,tumseripoz,0,seripoz.length);
            System.arraycopy(tekerlekliseripoz,0,tumseripoz,seripoz.length,tekerlekliseripoz.length);
            System.arraycopy(paletliseripoz,0,tumseripoz,seripoz.length+tekerlekliseripoz.length,paletliseripoz.length);
            System.arraycopy(spiderseripoz,0,tumseripoz,seripoz.length+tekerlekliseripoz.length+paletliseripoz.length,spiderseripoz.length);
            
            int[] tumparalelpoz = new int[paralelpoz.length+tekerlekliparalelpoz.length+paletliparalelpoz.length+spiderparalelpoz.length];
            System.arraycopy(paralelpoz,0,tumparalelpoz,0,paralelpoz.length);
            System.arraycopy(tekerlekliparalelpoz,0,tumparalelpoz,paralelpoz.length,tekerlekliparalelpoz.length);
            System.arraycopy(paletliparalelpoz,0,tumparalelpoz,paralelpoz.length+tekerlekliparalelpoz.length,paletliparalelpoz.length);
            System.arraycopy(spiderparalelpoz,0,tumparalelpoz,paralelpoz.length+tekerlekliparalelpoz.length+paletliparalelpoz.length,spiderparalelpoz.length);
            
            
            boolean gezginkontrol = gezginrobotkontrol(tumtekerleklipoz,tumpaletlipoz,tumspiderpoz,tp);
            boolean manipulatortasimahizikontrol = manipulatortasimahizikontrol(tumseripoz,tumparalelpoz,tp);
            boolean manipulatorkapasitekontrol = manipulatorkapasitekontrol(tumseripoz,tumparalelpoz,tp);
            boolean manipulatoryukmiktarıkapasitekontrol = manipulatoryukmiktarıkapasitekontrol(tumseripoz,tumparalelpoz,tp);
            
            if(!gezginkontrol){
                javax.swing.JOptionPane.showMessageDialog(this, "Tekerlekli Gezinme Hızı > Paletli Gezinme Hızı > Spider Gezinme Hızı olmalıdır!");
            }else if(!manipulatortasimahizikontrol){
                javax.swing.JOptionPane.showMessageDialog(this, "Paralel Taşıma Hızı > Seri Taşıma Hızı olmalıdır!");
            }else if(!manipulatorkapasitekontrol){
                javax.swing.JOptionPane.showMessageDialog(this, "Paralel Kapasite > Seri Kapasite olmalıdır!");
            }else if(!manipulatoryukmiktarıkapasitekontrol){
                javax.swing.JOptionPane.showMessageDialog(this, "Yük miktari kapasiteyi geçemez!");
            }else{
                for(int i=0;i<robotobjects.length;i++){
                    if(tp[1][i].getText().equals("Tekerlekli")){
                        robotobjects[i] = new Tekerlekli(Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),Integer.parseInt(tp[7][i].getText()));
                    }else if(tp[1][i].getText().equals("Paletli")){
                        robotobjects[i] = new Paletli(Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),Integer.parseInt(tp[8][i].getText()));
                    }else if(tp[1][i].getText().equals("Spider")){
                        robotobjects[i] = new Spider(Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),Integer.parseInt(tp[9][i].getText()));
                    }else if(tp[1][i].getText().equals("Seri")){
                        robotobjects[i] = new Seri(Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Paralel")){
                        robotobjects[i] = new Paralel(Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Tekerlekli-Seri")){
                        robotobjects[i] = new Hibrit("Tekerlekli",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),Integer.parseInt(tp[7][i].getText()),0,0,"Seri",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Tekerlekli-Paralel")){
                        robotobjects[i] = new Hibrit("Tekerlekli",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),Integer.parseInt(tp[7][i].getText()),0,0,"Paralel",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Paletli-Seri")){
                        robotobjects[i] = new Hibrit("Paletli",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),0,Integer.parseInt(tp[8][i].getText()),0,"Seri",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Paletli-Paralel")){
                        robotobjects[i] = new Hibrit("Paletli",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),0,Integer.parseInt(tp[8][i].getText()),0,"Paralel",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Spider-Seri")){
                        robotobjects[i] = new Hibrit("Spider",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),0,0,Integer.parseInt(tp[9][i].getText()),"Seri",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }else if(tp[1][i].getText().equals("Spider-Paralel")){
                        robotobjects[i] = new Hibrit("Spider",Integer.parseInt(tp[2][i].getText()), Double.parseDouble(tp[5][i].getText()), Integer.parseInt(tp[3][i].getText()), Integer.parseInt(tp[4][i].getText()), Double.parseDouble(tp[6][i].getText()),0,0,Integer.parseInt(tp[9][i].getText()),"Paralel",Double.parseDouble(tp[10][i].getText()),Double.parseDouble(tp[11][i].getText()),Double.parseDouble(tp[12][i].getText()));
                    }
                }
                
                this.remove(robotParametreGirisPaneli);
                izgarapaneli = new Izgara();
                jPanel15.setLayout(new GridLayout());
                jPanel15.add(izgarapaneli);
                this.add(engelSecimPaneli);
                this.revalidate();
                this.setVisible(false);
                this.setVisible(true);
                
                String[] robotisimvetipleri = new String[tp[0].length];
                for(int i = 0;i<tp[0].length;i++){
                    robotisimvetipleri[i] = tp[0][i].getText()+" ("+tp[1][i].getText()+")";
                }
                
                DefaultComboBoxModel model = new DefaultComboBoxModel( robotisimvetipleri);
                jComboBox2.setModel(model);
                jTextField5.setText(tp[3][0].getText());
                jTextField6.setText(tp[4][0].getText());
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        int selectedindex = ((JComboBox) evt.getSource()).getSelectedIndex();
        jTextField5.setText(""+robotobjects[selectedindex].getX());
        jTextField6.setText(""+robotobjects[selectedindex].getY());
        
        izgarapaneli.setRobot(robotobjects[selectedindex]);
        izgarapaneli.repaint();
        jTextArea1.setText("");
        hareketkomutu = "";
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jPanel15.removeAll();
        this.remove(engelSecimPaneli);
        this.add(robotParametreGirisPaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        
        engeller = new Engel[0];
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        int x = Integer.parseInt(jComboBox4.getSelectedItem().toString());
        int y = Integer.parseInt(jComboBox5.getSelectedItem().toString());
        
        Engel[] engeller2 = new Engel[engeller.length+1];
        System.arraycopy(engeller, 0, engeller2, 0, engeller.length);
        engeller2[engeller2.length-1] = new Engel(x,y);
        engeller = new Engel[engeller2.length];
        System.arraycopy(engeller2,0,engeller,0,engeller2.length);
        izgarapaneli.setEngeller(engeller);
        izgarapaneli.repaint();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.remove(engelSecimPaneli);
        this.add(robotHareketSecimPaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        
        jPanel11.setLayout(new GridLayout());
        jPanel11.add(izgarapaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        
        jComboBox2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        jPanel11.removeAll();
        this.remove(robotHareketSecimPaneli);
        this.add(engelSecimPaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        jPanel15.setLayout(new GridLayout());
        jPanel15.add(izgarapaneli);
        this.revalidate();
        this.setVisible(false);
        this.setVisible(true);
        
        izgarapaneli.setRobot(null);
        jTextArea1.setText("");
        hareketkomutu = "";
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String adet = jComboBox1.getSelectedItem().toString();
        hareketkomutu = hareketkomutu+adet+" Izgara Geri"+"\n";
        jTextArea1.setText(hareketkomutu);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String adet = jComboBox1.getSelectedItem().toString();
        hareketkomutu = hareketkomutu+adet+" Izgara İleri"+"\n";
        jTextArea1.setText(hareketkomutu);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String adet = jComboBox1.getSelectedItem().toString();
        hareketkomutu = hareketkomutu+adet+" Izgara Sağa"+"\n";
        jTextArea1.setText(hareketkomutu);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String adet = jComboBox1.getSelectedItem().toString();
        hareketkomutu = hareketkomutu+adet+" Izgara Sola"+"\n";
        jTextArea1.setText(hareketkomutu);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String komut = jTextArea1.getText();
        String[] komutlar = komut.split("\n");
        int totalhareket = 0;
        for(int i = 0; i<komutlar.length;i++){
            String[] ayrikomut = komutlar[i].split(" ");
            totalhareket += Integer.parseInt(ayrikomut[0]);
        }
        String[] komutlar2 = new String[totalhareket];
        int hareketsay = 0;
        for(int i=0; i<komutlar.length;i++){
            String[] ayrikomut = komutlar[i].split(" ");
            for(int j = 0; j<Integer.parseInt(ayrikomut[0]);j++){
                komutlar2[hareketsay++] = 1+" "+ayrikomut[1]+" "+ayrikomut[2];
            }
        }
        
        double hareketsuresi = 0;
        
        if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Tekerlekli") || robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paletli") || robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Spider")){
            outerloop:
            for(int i = 0; i<komutlar2.length;i++){
                String[] ayrikomut = komutlar2[i].split(" ");
                if(ayrikomut[2].equals("Sağa")){
                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                    hareketsuresi += 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("Sola")){
                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                    hareketsuresi += 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("İleri")){
                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                    hareketsuresi += 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("Geri")){
                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                    hareketsuresi += 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }

                if(robotobjects[jComboBox2.getSelectedIndex()].getX()>20 || robotobjects[jComboBox2.getSelectedIndex()].getX()<1 || robotobjects[jComboBox2.getSelectedIndex()].getY()>20 || robotobjects[jComboBox2.getSelectedIndex()].getY()<1){
                    javax.swing.JOptionPane.showMessageDialog(this, "Robot ızgaradan çıktı!!!");
                    if(ayrikomut[2].equals("Sağa")){
                        robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                        jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                        hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("Sola")){
                        robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                        jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                        hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("İleri")){
                        robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                        jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                        hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("Geri")){
                        robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                        jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                        hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }
                    break;
                }

                if(engeller.length>0){
                    for(int j=0;j<engeller.length;j++){
                        if(robotobjects[jComboBox2.getSelectedIndex()].getX() == engeller[j].getX() && robotobjects[jComboBox2.getSelectedIndex()].getY() == engeller[j].getY()){
                            if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Spider")){    
                                javax.swing.JOptionPane.showMessageDialog(this, "Spider robotlar engellerden geçemez!!!");
                                if(ayrikomut[2].equals("Sağa")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("Sola")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("İleri")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("Geri")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }
                                break outerloop;
                            }else if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Tekerlekli")){
                                hareketsuresi += ((Tekerlekli)robotobjects[jComboBox2.getSelectedIndex()]).EngelGecmeSuresiBul();
                            }else if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paletli")){
                                hareketsuresi += ((Paletli)robotobjects[jComboBox2.getSelectedIndex()]).EngelGecmeSuresiBul();
                            }
                        }
                    }
                }
            }
            
            jTextField1.setText(""+hareketsuresi);
            jTextField3.setText("");
        }else if(!robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Tekerlekli") && !robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paletli") && !robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Spider") && !robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Seri") && !robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paralel")){
            outerloop:
            for(int i = 0; i<komutlar2.length;i++){
                String[] ayrikomut = komutlar2[i].split(" ");
                if(ayrikomut[2].equals("Sağa")){
                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                    hareketsuresi += 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("Sola")){
                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                    hareketsuresi += 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("İleri")){
                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                    hareketsuresi += 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }else if(ayrikomut[2].equals("Geri")){
                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                    hareketsuresi += 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                }

                if(robotobjects[jComboBox2.getSelectedIndex()].getX()>20 || robotobjects[jComboBox2.getSelectedIndex()].getX()<1 || robotobjects[jComboBox2.getSelectedIndex()].getY()>20 || robotobjects[jComboBox2.getSelectedIndex()].getY()<1){
                    javax.swing.JOptionPane.showMessageDialog(this, "Robot ızgaradan çıktı!!!");
                    if(ayrikomut[2].equals("Sağa")){
                        robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                        jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                        hareketsuresi -= 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("Sola")){
                        robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                        jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                        hareketsuresi -= 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("İleri")){
                        robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                        jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                        hareketsuresi -= 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }else if(ayrikomut[2].equals("Geri")){
                        robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                        jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                        hareketsuresi -= 10/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                    }
                    break;
                }

                if(engeller.length>0){
                    for(int j=0;j<engeller.length;j++){
                        if(robotobjects[jComboBox2.getSelectedIndex()].getX() == engeller[j].getX() && robotobjects[jComboBox2.getSelectedIndex()].getY() == engeller[j].getY()){
                            if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Spider-Seri") || robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Spider-Paralel")){    
                                javax.swing.JOptionPane.showMessageDialog(this, "Spider robotlar engellerden geçemez!!!");
                                if(ayrikomut[2].equals("Sağa")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()-Integer.parseInt(ayrikomut[0]));
                                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("Sola")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setX(robotobjects[jComboBox2.getSelectedIndex()].getX()+Integer.parseInt(ayrikomut[0]));
                                    jTextField5.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getX()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("İleri")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()-Integer.parseInt(ayrikomut[0]));
                                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }else if(ayrikomut[2].equals("Geri")){
                                    robotobjects[jComboBox2.getSelectedIndex()].setY(robotobjects[jComboBox2.getSelectedIndex()].getY()+Integer.parseInt(ayrikomut[0]));
                                    jTextField6.setText(""+(robotobjects[jComboBox2.getSelectedIndex()].getY()));
                                    hareketsuresi -= 10/((GezginRobotlar)robotobjects[jComboBox2.getSelectedIndex()]).getGezinmehizi();
                                }
                                break outerloop;
                            }else if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Tekerlekli-Seri") || robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Tekerlekli-Paralel")){
                                hareketsuresi += ((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getTekerlekli().EngelGecmeSuresiBul();
                            }else if(robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paletli-Seri") || robotobjects[jComboBox2.getSelectedIndex()].getRobottipi().equals("Paletli-Paralel")){
                                hareketsuresi += ((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getPaletli().EngelGecmeSuresiBul();
                            }
                        }
                    }
                }
            }
            
            jTextField3.setText(""+(((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getKoluzunlugu()/((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getTasimahizi()));
            jTextField1.setText(""+(hareketsuresi+((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getGecissuresi()+((Hibrit)robotobjects[jComboBox2.getSelectedIndex()]).getSabitlenmesuresi()));
        }else{
            String[] tasimakomut = komutlar[0].split(" ");
            if(Integer.parseInt(tasimakomut[0])*10>((Manipulator)robotobjects[jComboBox2.getSelectedIndex()]).getKoluzunlugu()){
                javax.swing.JOptionPane.showMessageDialog(this, "Taşınacak mesafe kol uzunluğundan fazla olamaz! "+(Integer.parseInt(tasimakomut[0])*10)+"m > "+((Manipulator)robotobjects[jComboBox2.getSelectedIndex()]).getKoluzunlugu()+"m");
            }else{
                hareketsuresi = Integer.parseInt(tasimakomut[0])*10/((Manipulator)robotobjects[jComboBox2.getSelectedIndex()]).getTasimahizi();
                jTextField3.setText(""+hareketsuresi);
                jTextField1.setText("");
            }
        }
        jTextArea1.setText("");
        hareketkomutu = "";
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    private JComboBox[] tipler; //Üst tipler (Gezgin, manip,hibrit)
    private JComboBox[] alttipler1; // robotalttipisecimpaneli'nde 3. kolon için
    private String[] alttipler;
    ParametreSecimPaneli psp; // Parametre Secim Paneli
    Robot[] robotobjects;
    JTextField[][] tp;
    Izgara izgarapaneli;
    Engel[] engeller = new Engel[0];
    String hareketkomutu = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel engelSecimPaneli;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JPanel robotHareketSecimPaneli;
    private javax.swing.JPanel robotParametreGirisPaneli;
    private javax.swing.JPanel robotalttipisecimpaneli;
    private javax.swing.JPanel robottipisecimpaneli;
    // End of variables declaration//GEN-END:variables
    
    public static boolean pozitifTamSayimi(String str){
        try{
            int num = Integer.parseInt(str);
            if(num<1){
                throw new Exception();
            }
            
            return true;
            
        }catch(Exception e){
            return false;
        }
    }
    
    public static boolean doublemi(String str){
        try{
            double num = Double.parseDouble(str);
            if(num<1){
                throw new Exception();
            }
            
            return true;
            
        }catch(Exception e){
            return false;
        }
    }
    
    public static int[] pozisyonbul(String str, String[] strarray){
        int[] poz = new int[0];
        for(int i=0;i<strarray.length;i++){
            if(strarray[i].equals(str)){
                int[] poz2 = new int[poz.length+1];
                System.arraycopy(poz, 0, poz2, 0, poz.length);
                poz2[poz2.length-1] = i;
                poz = new int[poz2.length];
                System.arraycopy(poz2, 0, poz, 0, poz2.length);
            }
        }
        return poz;
    }
    
    public static double min(double[] arr){
        if(arr.length>0){
            double minval = arr[0];
            for(int i=0;i<arr.length;i++){
                if(arr[i]<=minval){
                    minval = arr[i];
                }
            }
            return minval;
        }else{
            return -1;
        }
    }
    
    public static double max(double[] arr){
        if(arr.length>0){
            double maxval = arr[0];
            for(int i=0;i<arr.length;i++){
                if(arr[i]>=maxval){
                    maxval = arr[i];
                }
            }
            return maxval;
        }else{
            return -1;
        }
    }
    
    public static boolean gezginrobotkontrol(int[] tekerleklipoz, int[] paletlipoz, int[] spiderpoz, JTextField[][] tp){
        double[] tekerlekligezinmehizi = new double[tekerleklipoz.length];
        double[] paletligezinmehizi = new double[paletlipoz.length];
        double[] spidergezinmehizi = new double[spiderpoz.length];
        
        if(tekerleklipoz.length>0){
            for(int i=0;i<tekerleklipoz.length;i++){
                tekerlekligezinmehizi[i] = Double.parseDouble(tp[6][tekerleklipoz[i]].getText());
            }
        }
        
        if(paletlipoz.length>0){
            for(int i=0;i<paletlipoz.length;i++){
                paletligezinmehizi[i] = Double.parseDouble(tp[6][paletlipoz[i]].getText());
            }
        }
        
        if(spiderpoz.length>0){
            for(int i=0;i<spiderpoz.length;i++){
                spidergezinmehizi[i] = Double.parseDouble(tp[6][spiderpoz[i]].getText());
            }
        }
        
        double maxtekerlekligezinmehizi = max(tekerlekligezinmehizi);
        double mintekerlekligezinmehizi = min(tekerlekligezinmehizi);
        double maxpaletligezinmehizi = max(paletligezinmehizi);
        double minpaletligezinmehizi = min(paletligezinmehizi);
        double maxspidergezinmehizi = max(spidergezinmehizi);
        double minspidergezinmehizi = min(spidergezinmehizi);
        
        boolean gezginkontrol = true;
        if(tekerleklipoz.length>0 && paletlipoz.length>0 && spiderpoz.length>0){
            if(mintekerlekligezinmehizi<=maxpaletligezinmehizi || minpaletligezinmehizi<=maxspidergezinmehizi){
                gezginkontrol = false;
            }
        }else if(tekerleklipoz.length>0 && paletlipoz.length>0){
            if(mintekerlekligezinmehizi<=maxpaletligezinmehizi){
                gezginkontrol = false;
            }
        }else if(tekerleklipoz.length>0 && spiderpoz.length>0){
            if(mintekerlekligezinmehizi<=maxspidergezinmehizi){
                gezginkontrol = false;
            }
        }else if(paletlipoz.length>0 && spiderpoz.length>0){
            if(minpaletligezinmehizi<=maxspidergezinmehizi){
                gezginkontrol = false;
            }
        }
        return gezginkontrol;
    }
    
    public static boolean manipulatortasimahizikontrol(int[] seripoz, int[] paralelpoz, JTextField[][] tp){
        double[] seritasimahizi = new double[seripoz.length];
        double[] paraleltasimahizi = new double[paralelpoz.length];
        
        //For Debugging //System.out.println(seripoz.length);
        if(seripoz.length>0){
            for(int i=0;i<seripoz.length;i++){
                //For Debugging //System.out.println(seripoz[i]+" "+tp[12][seripoz[i]].getText());
                seritasimahizi[i] = Double.parseDouble(tp[12][seripoz[i]].getText());
            }
        }
        
        if(paralelpoz.length>0){
            for(int i=0;i<paralelpoz.length;i++){
                paraleltasimahizi[i] = Double.parseDouble(tp[12][paralelpoz[i]].getText());
            }
        }
        
        double maxseritasimahizi = max(seritasimahizi);
        double minseritasimahizi = min(seritasimahizi);
        double maxparaleltasimahizi = max(paraleltasimahizi);
        double minparaleltasimahizi = min(paraleltasimahizi);
        
        boolean manipulatorkontrol = true;
        
        if(seripoz.length>0 && paralelpoz.length>0){
            if(minseritasimahizi>=maxparaleltasimahizi){
                manipulatorkontrol = false;
            }
        }
        return manipulatorkontrol;
    }
    
    public static boolean manipulatorkapasitekontrol(int[] seripoz, int[] paralelpoz, JTextField[][] tp){
        double[] serikapasite = new double[seripoz.length];
        double[] paralelkapasite = new double[paralelpoz.length];
        
        if(seripoz.length>0){
            for(int i=0;i<seripoz.length;i++){
                serikapasite[i] = Double.parseDouble(tp[10][seripoz[i]].getText());
            }
        }
        
        if(paralelpoz.length>0){
            for(int i=0;i<paralelpoz.length;i++){
                paralelkapasite[i] = Double.parseDouble(tp[10][paralelpoz[i]].getText());
            }
        }
        
        double maxserikapasite = max(serikapasite);
        double minserikapasite = min(serikapasite);
        double maxparalelkapasite = max(paralelkapasite);
        double minparalelkapasite = min(paralelkapasite);
        
        boolean manipulatorkontrol = true;
        
        if(seripoz.length>0 && paralelpoz.length>0){
            if(minserikapasite>=maxparalelkapasite){
                manipulatorkontrol = false;
            }
        }
        return manipulatorkontrol;
    }
    
    public static boolean manipulatoryukmiktarıkapasitekontrol(int[] seripoz, int[] paralelpoz, JTextField[][] tp){
        double[] serikapasite = new double[seripoz.length];
        double[] paralelkapasite = new double[paralelpoz.length];
        double[] seriyukmiktari = new double[seripoz.length];
        double[] paralelyukmiktari = new double[paralelpoz.length];
        
        if(seripoz.length>0){
            for(int i=0;i<seripoz.length;i++){
                serikapasite[i] = Double.parseDouble(tp[10][seripoz[i]].getText());
                seriyukmiktari[i] = Double.parseDouble(tp[5][seripoz[i]].getText());
                if(seriyukmiktari[i]>serikapasite[i]){
                    return false;
                }
            }
        }
        
        if(paralelpoz.length>0){
            for(int i=0;i<paralelpoz.length;i++){
                paralelkapasite[i] = Double.parseDouble(tp[10][paralelpoz[i]].getText());
                paralelyukmiktari[i] = Double.parseDouble(tp[5][paralelpoz[i]].getText());
                if(paralelyukmiktari[i]>paralelkapasite[i]){
                    return false;
                }
            }
        }
        
        return true;
    }
}
